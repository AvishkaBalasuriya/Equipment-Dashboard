{"version":3,"sources":["components/headers/AuthenticationHeader.js","components/InputField.js","redux/actions/authentication.js","redux/actions/otp.js","redux/actions/snackBar.js","services/backend.js","pages/LoginPage.js","redux/actions/loadingPanel.js","components/StatusCard.js","components/charts/BarChart.js","redux/localStore.js","redux/reducers/authentication.js","redux/reducers/otp.js","redux/reducers/cardData.js","redux/reducers/chartData.js","redux/reducers/loadingPanel.js","redux/reducers/snackBar.js","redux/reducers/index.js","redux/store.js","redux/actions/cardData.js","services/socket.js","redux/actions/chartData.js","pages/Dashboard.js","pages/SendOtpPage.js","pages/RegisterPage.js","pages/VerifyOtpPage.js","pages/PasswordResetPage.js","components/ProtectedRoute.js","components/NavigationBar.js","App.js","index.js"],"names":["AuthenticationHeader","props","classes","makeStyles","theme","paper","marginBottom","spacing","useStyles","alt","src","className","Typography","component","variant","title","InputField","TextField","margin","required","fullWidth","id","label","name","autoComplete","type","onChange","e","target","value","autoFocus","setLoggedUser","payload","setOtpUserId","showAlert","login","data","a","reqData","JSON","stringify","email","password","config","method","url","configData","server","host","headers","axios","catch","success","error","message","response","undefined","sendOtpCode","verifyOtpCode","userId","otpCode","resetPassword","otpId","passwordConfirm","register","firstName","lastName","accessToken","LoginPage","marginTop","display","flexDirection","alignItems","form","width","submit","dispatch","useDispatch","history","useHistory","useState","onChangeEmailInput","onChangePasswordInput","callLogin","preventDefault","loginResult","code","status","replace","authToken","userData","jwt","decode","Container","maxWidth","CssBaseline","noValidate","Button","color","onClick","Grid","container","item","xs","Link","href","StatusCard","root","backgroundColor","minWidth","minHeight","height","justifyContent","titlePaper","textAlign","fontSize","fontWeight","counter","lastUpdate","Card","CardContent","count","CardActionArea","BarChart","ResponsiveContainer","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","loadFromLocalStore","key","parse","localStorage","getItem","initialState","state","logout","authenticationReducer","action","setOtpId","clearOtpData","otpReducer","operational","nonOperational","updateCardData","clearCardData","cardDataReducer","equipmentInventory","xAxis","yAxis","setChartData","clearChartData","chartDataReducer","loadingPanelReducer","snackBarReducer","rootReducer","combineReducers","middlewareEnhancer","applyMiddleware","_","next","returnValue","setItem","removeItem","saveToLocalStore","composedEnhancers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","listenToDataStream","token","console","log","io","query","on","cardData","Date","toISOString","chartData","DashboardPage","flexGrow","chartPaper","cardDataReducerOperational","useSelector","cardDataReducerNonOperational","chartDataReducerEquipmentInventory","useEffect","sm","lg","SendOtpPage","callSendOtpCode","sendOtpCodeResult","RegisterPage","authenticationData","onChangefirstNameInput","onChangelastNameInput","onChangepasswordConfirmInput","onChangeTypeInput","callRegister","registerResult","clearInputs","FormControlLabel","control","Checkbox","checked","inputProps","VerifyOtpPage","otpData","onChangeOtpCodeInput","callVerifyOtpCode","verifyOtpCodeResult","PasswordResetPage","onChangePasswordConfirmInput","callPasswordReset","passwordResetResult","ProtectedRoute","Component","rest","render","to","ProtectedAdminRoute","NavigationBar","navigate","route","push","addNewButton","logoutButton","AppBar","position","Toolbar","App","loadingStatus","snackBarData","backdrop","zIndex","drawer","Alert","elevation","Backdrop","open","CircularProgress","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","event","reason","severity","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2b409b.chunk.js","sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst AuthenticationHeader = (props) => {\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          marginBottom: theme.spacing(4),\n        }\n    }))\n\n    const classes = useStyles()\n\n    return (\n        <>\n            <img alt=\"Iviva Icon\" src=\"https://static.iviva.com/favicon.ico\" className={classes.paper}></img>\n            <Typography component=\"h1\" variant=\"h4\" className={classes.paper}>{props.title}</Typography>\n        </>\n    )\n}\n\nexport default AuthenticationHeader\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\n\nconst InputField = (props) => {\n    const onChange = (e) => {\n        props.onChange(e.target.value)\n    }\n\n    return (\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id={props.id}\n            label={props.label}\n            name={props.name}\n            autoComplete={props.autoComplete}\n            type={props.type}\n            onChange={(e)=>onChange(e)}\n            autoFocus\n        />\n    )\n}\n\nexport default InputField\n","export const setLoggedUser = (payload) =>{\n    return({\n        type:'SET_LOGGED_USER',\n        payload:payload\n    })\n}\n\nexport const clearLoggedUser = () =>{\n    return {\n        type:'CLEAR_LOGGED_USER'\n    }\n}","export const setOtpUserId = (payload) =>{\n    return({\n        type:'SET_OTP_USER_ID',\n        payload:payload\n    })\n}\n\nexport const setOtpId = (payload) =>{\n    return({\n        type:'SET_OTP_ID',\n        payload:payload\n    })\n}\n\nexport const clearOtpData = () =>{\n    return {\n        type:'CLEAR_OTP_DATA'\n    }\n}","export const showAlert = (payload) =>{\n    return({\n        type:'SHOW_ALERT',\n        payload:payload\n    })\n}\n\nexport const hideAlert = () =>{\n    return {\n        type:'HIDE_ALERT'\n    }\n}","import axios from 'axios'\nimport configData from '../config.json'\n\nconst login = async (data) => {\n    var reqData = JSON.stringify({\n        \"email\": data.email,\n        \"password\": data.password\n    });\n        \n    var config = {\n        method: 'post',\n        url: `${configData.server.host}/api/v1/auth/login`,\n        headers: { \n            'Content-Type': 'application/json'\n        },\n        data : reqData\n    };\n    \n    let response = await axios(config).catch((e)=>{\n        return {success:false,error:e.message,data:null}\n    });\n    return response.success===undefined?response.data:response\n}\n\nconst sendOtpCode = async (data) => {\n    var reqData = JSON.stringify({\n        \"contact\": data.email\n    });\n        \n    var config = {\n        method: 'post',\n        url: `${configData.server.host}/api/v1/otp/issue`,\n        headers: { \n            'Content-Type': 'application/json'\n        },\n        data : reqData\n    };\n    \n    let response = await axios(config).catch((e)=>{\n        return {success:false,error:e.message,data:null}\n    });\n    return response.success===undefined?response.data:response\n}\n\nconst verifyOtpCode = async (data) => {\n    var reqData = JSON.stringify({\n        userId : data.userId,\n        otpCode: data.otpCode\n    });\n        \n    var config = {\n        method: 'post',\n        url: `${configData.server.host}/api/v1/otp/verify`,\n        headers: { \n            'Content-Type': 'application/json'\n        },\n        data : reqData\n    };\n    \n    let response = await axios(config).catch((e)=>{\n        return {success:false,error:e.message,data:null}\n    });\n    return response.success===undefined?response.data:response\n}\n\nconst resetPassword = async (data) => {\n    var reqData = JSON.stringify({\n        otpId : data.otpId,\n        password: data.password,\n        passwordConfirm:data.passwordConfirm,\n    });\n        \n    var config = {\n        method: 'post',\n        url: `${configData.server.host}/api/v1/auth/forget`,\n        headers: { \n            'Content-Type': 'application/json'\n        },\n        data : reqData\n    };\n    \n    let response = await axios(config).catch((e)=>{\n        return {success:false,error:e.message,data:null}\n    });\n    return response.success===undefined?response.data:response\n}\n\nconst register = async (data) => {\n    var reqData = JSON.stringify({\n        email:data.email,\n        password:data.password,\n        passwordConfirm:data.passwordConfirm,\n        firstName:data.firstName,\n        lastName:data.lastName,\n        type:data.type\n    })\n        \n    var config = {\n        method: 'post',\n        url: `${configData.server.host}/api/v1/auth/register`,\n        headers: { \n            'Authorization': `Bearer ${data.accessToken}`, \n            'Content-Type': 'application/json'\n        },\n        data : reqData\n    };\n    \n    let response = await axios(config).catch((e)=>{\n        return {success:false,error:e.message,data:null}\n    });\n    return response.success===undefined?response.data:response\n}\n\nexport {\n    login,\n    sendOtpCode,\n    verifyOtpCode,\n    resetPassword,\n    register,\n}","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport jwt from 'jsonwebtoken'\nimport {useState} from 'react'\nimport {useDispatch} from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport AuthenticationHeader from '../components/headers/AuthenticationHeader'\nimport InputField from '../components/InputField'\n\nimport {setLoggedUser} from '../redux/actions/authentication'\nimport {setOtpUserId} from '../redux/actions/otp'\nimport {showLoadingPanel,hideLoadingPanel} from '../redux/actions/loadingPanel'\nimport {showAlert} from '../redux/actions/snackBar'\n\nimport {login} from '../services/backend'\n\n\nconst LoginPage = () => {\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        form: {\n          width: '100%',\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n    }))\n    \n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const [email,onChangeEmailInput] = useState()\n    const [password,onChangePasswordInput] = useState()\n\n    const callLogin = async(e) => {\n        e.preventDefault()\n\n        dispatch(showLoadingPanel())\n\n        let loginResult = await login({email:email,password:password})\n        if(!loginResult.success){\n            if(loginResult.code===503){\n                dispatch(hideLoadingPanel())\n                dispatch(showAlert({status:true,message:loginResult.message===\"\"?loginResult.error:loginResult.message,type:\"error\"}))\n                dispatch(setOtpUserId({userId:loginResult.data.userId}))\n                history.replace('/verifyOtp')\n            }\n            dispatch(hideLoadingPanel())\n            dispatch(showAlert({status:true,message:loginResult.message===\"\"?loginResult.error:loginResult.message,type:\"error\"}))\n            return\n        }\n        \n        let authToken = loginResult.data.accessToken\n        let userData = jwt.decode(authToken)\n\n        dispatch(hideLoadingPanel())\n        dispatch(setLoggedUser({authToken:authToken,userData:userData}))\n        history.replace('/dashboard')\n    }\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n                <AuthenticationHeader title=\"Sign In\"></AuthenticationHeader>\n                <form className={classes.form} noValidate>\n                    <InputField\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        onChange={onChangeEmailInput}\n                    ></InputField>\n                    <InputField\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={onChangePasswordInput}\n                    ></InputField>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={(e)=>callLogin(e)}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"/sendOtpVerification\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n} \n\nexport default LoginPage\n","export const showLoadingPanel = () =>{\n    return({\n        type:'SHOW_LOADING'\n    })\n}\n\nexport const hideLoadingPanel = () =>{\n    return {\n        type:'HIDE_LOADING'\n    }\n}","import {React} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport Typography from '@material-ui/core/Typography'\n\nconst StatusCard = (props) => {\n    const useStyles = makeStyles({\n        root: {\n            backgroundColor:'#26282b',\n            margin:props.margin,\n            minWidth: props.width,\n            minHeight: props.height,\n            justifyContent:'center',\n            alignItems:'center'\n        },\n        titlePaper:{\n            backgroundColor:'#8884d8',\n        },\n        title: {\n            textAlign:'center',\n            color:'black',\n            fontSize: props.fontSize,\n            fontWeight:'bold'\n        },\n        counter: {\n            textAlign:'center',\n            color:'white',\n            fontSize: 60,\n            fontWeight:'bolder'\n        },\n        lastUpdate: {\n            textAlign:'center',\n            color:'white',\n            fontSize: 12,\n        },\n        error:{\n            textAlign:'center',\n            color:'white',\n            fontSize: 16,\n        }\n    })\n\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.root}>\n            <div className={classes.titlePaper}>\n                <Typography className={classes.title}>\n                    {props.title}\n                </Typography>\n            </div>\n            <CardContent>\n            {\n                props.data?\n                <>\n                    <Typography className={classes.counter} variant=\"h6\" component=\"h1\">\n                        {props.data.count}\n                    </Typography>\n                </>\n                :\n                <p className={classes.error}>Sorry! Unable to load data for this counter</p>\n            }\n            </CardContent>\n            <CardActionArea />\n            <Typography className={classes.lastUpdate} variant=\"h2\" component=\"h1\">\n                Last Update On: {props.data.lastUpdate}\n            </Typography>\n        </Card>\n    )\n}\n\nexport default StatusCard\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { BarChart as BarChartComponent, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts'\n\nconst BarChart = (props) => {\n  const useStyles = makeStyles({\n    lastUpdate: {\n      textAlign:'center',\n      color:'black',\n      fontSize: 12,\n      fontWeight:'bold'\n    },\n    error:{\n      textAlign:'center',\n      color:'black',\n      fontSize: 16,\n    },\n    root:{\n      textAlign:'center',\n      color:'black',\n      fontSize: 16,\n    }\n  })\n\n  const classes = useStyles()\n  \n  return props.data?(\n    <>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChartComponent\n          data={props.data.data}\n          margin={{\n            top: 40,\n            right: 40,\n            left: 0,\n            bottom: 0,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis  dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"count\" fill=\"#8884d8\" />\n        </BarChartComponent>\n      </ResponsiveContainer>\n      <p className={classes.lastUpdate}>\n        Last Update On: {props.data.lastUpdate}\n      </p>\n    </>\n  ) : <h5 className={classes.error}>Unable to load chart</h5>\n}\n\nexport default BarChart","const saveToLocalStore = (action) => {\n    if(action.type===\"SET_LOGGED_USER\"){\n        localStorage.setItem(\"authenticationReducer\",JSON.stringify(action.payload))\n\n    }else if(action.type===\"UPDATE_CARD_DATA\"){\n        let data = loadFromLocalStore(\"cardDataReducer\")\n        let payload = action.payload\n        if(data){\n            data[payload.name]={count:payload.count,lastUpdate:payload.lastUpdate}\n        }else{\n            data = {}\n            data[payload.name]={count:payload.count,lastUpdate:payload.lastUpdate}\n        }\n        localStorage.setItem(\"cardDataReducer\",JSON.stringify(data))\n\n    }else if(action.type===\"SET_CHART_DATA\"){\n        let data = loadFromLocalStore(\"chartDataReducer\")\n        let payload = action.payload\n        if(data){\n            data[payload.name]={data:payload.data,xAxis:payload.xAxis,yAxis:payload.yAxis,title:payload.title,lastUpdate:payload.lastUpdate}\n        }else{\n            data = {}\n            data[payload.name]={data:payload.data,xAxis:payload.xAxis,yAxis:payload.yAxis,title:payload.title,lastUpdate:payload.lastUpdate}\n        }\n        localStorage.setItem(\"chartDataReducer\",JSON.stringify(data))\n\n    }else if(action.type===\"CLEAR_LOGGED_USER\"){\n        localStorage.removeItem(\"authenticationReducer\")\n        localStorage.removeItem(\"cardDataReducer\")\n        localStorage.removeItem(\"chartDataReducer\")\n    }\n}\n\nconst storeListner = (_) => {\n    return next => action => {\n        const returnValue = next(action)\n        saveToLocalStore(action)\n        return returnValue\n    }\n}\n\nconst loadFromLocalStore = (key) => {\n    let data = JSON.parse(localStorage.getItem(key))\n    if(data)\n        return data\n    return false\n}\n\nexport {\n    storeListner,\n    loadFromLocalStore\n}","import {loadFromLocalStore} from '../localStore'\n\nconst initialState = () => {\n    let state = loadFromLocalStore('authenticationReducer')\n    if(state)\n        return state\n    else\n        return null\n}\n\nconst authenticationReducer = (state=initialState(),action)=>{\n    switch(action.type){\n        case \"SET_LOGGED_USER\":\n            return login(state,action.payload)\n        case \"CLEAR_LOGGED_USER\":\n            return logout(state)\n        default:\n            return state\n    }\n}\n\nfunction login(state,payload){\n    if(state!=null){\n        state[\"authToken\"]=payload.authToken\n        state[\"userData\"]=payload.userData\n    }else{\n        let stateData = {\n            authToken:payload.authToken,\n            userData:payload.userData\n        }\n        state=stateData\n    }\n    return state\n}\n\nfunction logout(state){\n    state=null\n    return state\n}\n\nexport default authenticationReducer","const otpReducer = (state=null,action)=>{\n    switch(action.type){\n        case \"SET_OTP_USER_ID\":\n            return setOtpUserId(state,action.payload)\n        case \"SET_OTP_ID\":\n            return setOtpId(state,action.payload)\n        case \"CLEAR_OTP_DATA\":\n            return clearOtpData(state)\n        default:\n            return state\n    }\n}\n\nfunction setOtpUserId(state,payload){\n    if(state!=null){\n        state[\"userId\"]=payload.userId\n    }else{\n        let stateData = {\n            userId:payload.userId\n        }\n        state=stateData\n    }\n    return state\n}\n\nfunction setOtpId(state,payload){\n    if(state!=null){\n        state[\"otpId\"]=payload.otpId\n    }else{\n        let stateData = {\n            otpId:payload.otpId\n        }\n        state=stateData\n    }\n    return state\n}\n\nfunction clearOtpData(state){\n    state=null\n    return state\n}\n\nexport default otpReducer","import {loadFromLocalStore} from '../localStore'\n\nconst initialState = () => {\n    let state = loadFromLocalStore('cardDataReducer')\n    if(state)\n        return state\n    else\n        return {\n            operational:{\n                count:0,\n                lastUpdate:\"Unknown\"\n            },\n            nonOperational:{\n                count:0,\n                lastUpdate:\"Unknown\"\n            }\n        }\n}\n\nconst cardDataReducer = (state=initialState(),action)=>{\n    switch(action.type){\n        case \"UPDATE_CARD_DATA\":\n            return updateCardData(state,action.payload)\n        case \"CLEAR_CARD_DATA\":\n            return clearCardData(state)\n        default:\n            return state\n    }\n}\n\nfunction updateCardData(state,payload){\n    if(state!=null){\n        state[payload.name]={\n            count:payload.count,\n            lastUpdate:payload.lastUpdate\n        }\n    }else{\n        state = {}\n        state[payload.name]={\n            count:payload.count,\n            lastUpdate:payload.lastUpdate\n        }\n    }\n    return state\n}\n\nfunction clearCardData(state){\n    state=null\n    return state\n}\n\nexport default cardDataReducer","import {loadFromLocalStore} from '../localStore'\n\nconst initialState = () => {\n    let state = loadFromLocalStore('chartDataReducer')\n    if(state)\n        return state\n    else\n        return {\n            equipmentInventory:{\n                data:[],\n                xAxis:\"\",\n                yAxis:\"payload.yAxis\",\n                title:\"\",\n                lastUpdate:\"Unknown\"\n            }\n        }\n}\n\nconst chartDataReducer = (state=initialState(),action)=>{\n    switch(action.type){\n        case \"SET_CHART_DATA\":\n            return setChartData(state,action.payload)\n        case \"CLEAR_CHART_DATA\":\n            return clearChartData(state)\n        default:\n            return state\n    }\n}\n\nfunction setChartData(state,payload){\n    if(state!=null){\n        state[payload.name]={\n            data:payload.data,\n            xAxis:payload.xAxis,\n            yAxis:payload.yAxis,\n            title:payload.title,\n            lastUpdate:payload.lastUpdate,\n        }\n    }else{\n        state = {}\n        state[payload.name]={\n            data:payload.data,\n            xAxis:payload.xAxis,\n            yAxis:payload.yAxis,\n            title:payload.title,\n            lastUpdate:payload.lastUpdate,\n        }\n    }\n    return state\n}\n\nfunction clearChartData(state){\n    state=null\n    return state\n}\n\nexport default chartDataReducer","const loadingPanelReducer = (state=false,action)=>{\n    switch(action.type){\n        case \"SHOW_LOADING\":\n            return state=true\n        case \"HIDE_LOADING\":\n            return state=false\n        default:\n            return state\n    }\n}\n\nexport default loadingPanelReducer","const initialState = {\n    message:\"\",\n    type:\"success\",\n    status:false\n}\n\nconst snackBarReducer = (state=initialState,action)=>{\n    switch(action.type){\n        case \"SHOW_ALERT\":\n            return action.payload\n        case \"HIDE_ALERT\":\n            return initialState\n        default:\n            return state\n    }\n}\n\nexport default snackBarReducer","import {combineReducers} from 'redux'\n\nimport authenticationReducer from './authentication'\nimport otpReducer from './otp'\nimport cardDataReducer from './cardData'\nimport chartDataReducer from './chartData'\nimport loadingPanelReducer from './loadingPanel'\nimport snackBarReducer from './snackBar'\n\nconst rootReducer = combineReducers({\n    authenticationReducer:authenticationReducer,\n    otpReducer:otpReducer,\n    cardDataReducer:cardDataReducer,\n    chartDataReducer:chartDataReducer,\n    loadingPanelReducer:loadingPanelReducer,\n    snackBarReducer:snackBarReducer\n})\n\nexport default rootReducer","import {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from './reducers/index'\nimport {storeListner} from './localStore'\n\nconst middlewareEnhancer = applyMiddleware(storeListner)\nconst composedEnhancers = compose(middlewareEnhancer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport const store = createStore(rootReducer,undefined,composedEnhancers)\n\n","export const updateCardData = (payload) =>{\n    return({\n        type:'UPDATE_CARD_DATA',\n        payload:payload\n    })\n}\n\nexport const clearCardData = () =>{\n    return {\n        type:'CLEAR_CARD_DATA'\n    }\n}","import {io} from \"socket.io-client\"\nimport configData from '../config.json'\n\nimport {store} from '../redux/store'\nimport {updateCardData} from '../redux/actions/cardData'\nimport {setChartData} from '../redux/actions/chartData'\n\nlet socket=null\n\nconst listenToDataStream = async(token) => {\n    console.log(\"Started to listen\")\n    socket = await io(configData.server.host,{\n        query: {token}\n    })\n    socket.on(\"updated\",(data)=>{\n        store.dispatch(updateCardData({\n            name:\"operational\",\n            count:data.cardData.operational,\n            lastUpdate: new Date().toISOString()\n        }))\n        store.dispatch(updateCardData({\n            name:\"nonOperational\",\n            count:data.cardData.nonOperational,\n            lastUpdate: new Date().toISOString()\n        }))\n        store.dispatch(setChartData({\n            name:\"equipmentInventory\",\n            data:data.chartData,\n            yAxis:\"count\",\n            xAxis:\"category\",\n            title:\"Equipment Inventory\",\n            lastUpdate: new Date().toISOString()\n        }))\n    })\n}\n\nexport {\n    listenToDataStream\n}","export const setChartData = (payload) =>{\n    return({\n        type:'SET_CHART_DATA',\n        payload:payload\n    })\n}\n\nexport const clearChartData = () =>{\n    return {\n        type:'CLEAR_CHART_DATA'\n    }\n}","import {React,useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport {useSelector} from 'react-redux'\n\nimport StatusCard from '../components/StatusCard'\nimport BarChart from '../components/charts/BarChart'\n\nimport {listenToDataStream} from '../services/socket'\n\nfunction DashboardPage() {\n\n    const useStyles = makeStyles(() => ({\n        paper: {\n            flexGrow:1,\n        },\n        chartPaper: {\n            width:\"100%\",\n            height:450\n        }\n    }));\n\n    const classes = useStyles()\n    const cardDataReducerOperational = useSelector(state=>state.cardDataReducer.operational)\n    const cardDataReducerNonOperational= useSelector(state=>state.cardDataReducer.nonOperational)\n    const chartDataReducerEquipmentInventory = useSelector(state=>state.chartDataReducer.equipmentInventory)\n    const authToken = useSelector(state=>state.authenticationReducer.authToken)\n\n    useEffect(() => {\n        listenToDataStream(authToken)\n    },[authToken])\n\n    return (\n        <>\n        <Grid container spacing={0} className={classes.paper}>\n            <Grid item xs={12} sm={6} lg={6}>\n                <StatusCard\n                        title=\"Operational\"\n                        data={cardDataReducerOperational?cardDataReducerOperational:null}\n                        fontSize={40}\n                        margin={20}\n                        height={250}\n                        width={200}\n                ></StatusCard>\n            </Grid>\n            <Grid item xs={12} sm={6} lg={6}>\n                <StatusCard\n                    title=\"Non-Operational\"\n                    data={cardDataReducerNonOperational?cardDataReducerNonOperational:null}\n                    fontSize={40}\n                    margin={20}\n                    height={250}\n                    width={200}\n                ></StatusCard>\n            </Grid>\n            <Grid item xs={12} sm={12} lg={12}>\n                <div className={classes.chartPaper}>\n                    <BarChart\n                        data={chartDataReducerEquipmentInventory?chartDataReducerEquipmentInventory:null}\n                    ></BarChart>\n                </div>\n            </Grid>\n        </Grid>\n        </>\n    )\n}\n\nexport default DashboardPage\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useState} from 'react'\nimport {useDispatch} from 'react-redux'\nimport { useHistory } from 'react-router-dom';\n\nimport AuthenticationHeader from '../components/headers/AuthenticationHeader'\nimport InputField from '../components/InputField'\n\nimport {setOtpUserId} from '../redux/actions/otp'\nimport {showLoadingPanel,hideLoadingPanel} from '../redux/actions/loadingPanel'\nimport {showAlert} from '../redux/actions/snackBar'\n\nimport {sendOtpCode} from '../services/backend'\n\n\nconst SendOtpPage = () => {\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        form: {\n          width: '100%',\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n    }))\n    \n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const [email,onChangeEmailInput] = useState()\n\n    const callSendOtpCode = async(e) => {\n        e.preventDefault()\n\n        dispatch(showLoadingPanel())\n\n        let sendOtpCodeResult = await sendOtpCode({email:email})\n\n        if(!sendOtpCodeResult.success){\n            dispatch(hideLoadingPanel())\n            dispatch(showAlert({status:true,message:sendOtpCodeResult.message===\"\"?sendOtpCodeResult.error:sendOtpCodeResult.message,type:\"error\"}))\n            return \n        }\n        \n        let userId = sendOtpCodeResult.data.userId\n\n        dispatch(hideLoadingPanel())\n        dispatch(setOtpUserId({userId:userId}))\n\n        history.replace('/verifyOtp')\n    }\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n                <AuthenticationHeader title=\"Send Verification\"></AuthenticationHeader>\n                <form className={classes.form} noValidate>\n                    <InputField\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        onChange={onChangeEmailInput}\n                    ></InputField>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={(e)=>callSendOtpCode(e)}\n                    >\n                        Send Verification\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"/\" variant=\"body2\">\n                                Login\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n} \n\nexport default SendOtpPage\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport {useState} from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\n\nimport AuthenticationHeader from '../components/headers/AuthenticationHeader'\nimport InputField from '../components/InputField'\n\nimport {register} from '../services/backend'\n\nimport {showLoadingPanel,hideLoadingPanel} from '../redux/actions/loadingPanel'\nimport {showAlert} from '../redux/actions/snackBar'\n\nconst RegisterPage = () => {\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const authenticationData = useSelector(state=>state.authenticationReducer)\n\n  const [firstName,onChangefirstNameInput] = useState()\n  const [lastName,onChangelastNameInput] = useState()\n  const [email,onChangeEmailInput] = useState()\n  const [password,onChangePasswordInput] = useState()\n  const [passwordConfirm,onChangepasswordConfirmInput] = useState()\n  const [type,onChangeTypeInput] = useState(false)\n\n  const callRegister = async(e) => {\n    e.preventDefault()\n\n    dispatch(showLoadingPanel())\n\n    let registerResult = await register({\n      firstName:firstName,\n      lastName:lastName,\n      email:email,\n      password:password,\n      passwordConfirm:passwordConfirm,\n      type:type,\n      accessToken:authenticationData.authToken\n    })\n\n    dispatch(hideLoadingPanel())\n\n    if(!registerResult.success){\n      dispatch(hideLoadingPanel())\n      dispatch(showAlert({status:true,message:registerResult.message===\"\"?registerResult.error:registerResult.message,type:\"error\"}))\n      return \n    }\n    dispatch(showAlert({status:true,message:registerResult.message,type:\"success\"}))\n    clearInputs()\n  }\n\n  const clearInputs = () => {\n    onChangefirstNameInput()\n    onChangelastNameInput()\n    onChangeEmailInput()\n    onChangePasswordInput()\n    onChangepasswordConfirmInput()\n    onChangeTypeInput(false)\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" id=\"paper\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <AuthenticationHeader title=\"Register New Admin\"></AuthenticationHeader>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <InputField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                id=\"firstName\"\n                label=\"First Name\"\n                onChange={onChangefirstNameInput}\n              ></InputField>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputField\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={onChangelastNameInput}\n              ></InputField>\n            </Grid>\n            <Grid item xs={12}>\n              <InputField\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={onChangeEmailInput}\n              ></InputField>\n            </Grid>\n            <Grid item xs={12}>\n              <InputField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"password\"\n                onChange={onChangePasswordInput}\n              ></InputField>\n            </Grid>\n            <Grid item xs={12}>\n              <InputField\n                name=\"passwordConfirm\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"passwordConfirm\"\n                autoComplete=\"passwordConfirm\"\n                onChange={onChangepasswordConfirmInput}\n              ></InputField>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={type}\n                    onChange={(e)=>{onChangeTypeInput(e.target.checked)}}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                }\n                label=\"Is Admin\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={(e)=>callRegister(e)}\n          >\n            Register\n          </Button>\n        </form>\n      </div>\n    </Container>\n  )\n}\n\nexport default RegisterPage","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useState} from 'react'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { useHistory } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\n\nimport AuthenticationHeader from '../components/headers/AuthenticationHeader'\nimport InputField from '../components/InputField'\n\nimport {setOtpId} from '../redux/actions/otp'\nimport {setLoggedUser} from '../redux/actions/authentication'\nimport {showLoadingPanel,hideLoadingPanel} from '../redux/actions/loadingPanel'\nimport {showAlert} from '../redux/actions/snackBar'\n\nimport {verifyOtpCode} from '../services/backend'\n\nconst VerifyOtpPage = () => {\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        form: {\n          width: '100%',\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n    }))\n    \n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const otpData = useSelector(state=>state.otpReducer)\n    const history = useHistory()\n\n    const [otpCode,onChangeOtpCodeInput] = useState()\n\n    const callVerifyOtpCode = async(e) => {\n        e.preventDefault()\n\n        dispatch(showLoadingPanel())\n\n        let verifyOtpCodeResult = await verifyOtpCode({userId:otpData.userId,otpCode:otpCode})\n\n        if(!verifyOtpCodeResult.success){\n            dispatch(hideLoadingPanel())\n            dispatch(showAlert({status:true,message:verifyOtpCodeResult.message===\"\"?verifyOtpCodeResult.error:verifyOtpCodeResult.message,type:\"error\"}))\n            return \n        }\n        \n        if(verifyOtpCodeResult.code===201){\n            let authToken = verifyOtpCodeResult.data.accessToken\n            let userData = jwt.decode(authToken)\n\n            dispatch(hideLoadingPanel())\n            dispatch(setLoggedUser({authToken:authToken,userData:userData}))\n            \n            history.replace('/dashboard')\n            return\n        }\n        \n        let otpId = verifyOtpCodeResult.data.otpId\n\n        dispatch(hideLoadingPanel())\n        dispatch(setOtpId({otpId:otpId}))\n\n        history.replace('/resetPassword')\n    }\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n                <AuthenticationHeader title=\"Verify OTP Code\"></AuthenticationHeader>\n                <form className={classes.form} noValidate>\n                    <InputField\n                        id=\"otpCode\"\n                        label=\"Otp Code\"\n                        name=\"otpCode\"\n                        autoComplete=\"otpCode\"\n                        onChange={onChangeOtpCodeInput}\n                    ></InputField>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={(e)=>callVerifyOtpCode(e)}\n                    >\n                        Verify\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"/\" variant=\"body2\">\n                                Login\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n} \n\nexport default VerifyOtpPage\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useState} from 'react'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { useHistory } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\nimport AuthenticationHeader from '../components/headers/AuthenticationHeader'\nimport InputField from '../components/InputField'\n\nimport {setLoggedUser} from '../redux/actions/authentication'\nimport {clearOtpData} from '../redux/actions/otp'\nimport {showLoadingPanel,hideLoadingPanel} from '../redux/actions/loadingPanel'\nimport {showAlert} from '../redux/actions/snackBar'\n\nimport {resetPassword} from '../services/backend'\n\nconst PasswordResetPage = () => {\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        form: {\n          width: '100%',\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n    }))\n    \n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const otpData = useSelector(state=>state.otpReducer)\n    const history = useHistory()\n\n    const [password,onChangePasswordInput] = useState()\n    const [passwordConfirm,onChangePasswordConfirmInput] = useState()\n\n    const callPasswordReset = async(e) => {\n        e.preventDefault()\n\n        dispatch(showLoadingPanel())\n\n        let passwordResetResult = await resetPassword({otpId:otpData.otpId,password:password,passwordConfirm:passwordConfirm})\n\n        if(!passwordResetResult.success){\n            dispatch(hideLoadingPanel())\n            dispatch(showAlert({status:true,message:passwordResetResult.message===\"\"?passwordResetResult.error:passwordResetResult.message,type:\"error\"}))\n            return \n        }\n        \n        let authToken = passwordResetResult.data.accessToken\n        let userData = jwt.decode(authToken)\n\n        dispatch(hideLoadingPanel())\n        dispatch(setLoggedUser({authToken:authToken,userData:userData}))\n        dispatch(clearOtpData())\n\n        history.replace('/dashboard')\n    }\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n                <AuthenticationHeader title=\"Reset Password\"></AuthenticationHeader>\n                <form className={classes.form} noValidate>\n                    <InputField\n                        id=\"password\"\n                        label=\"Password\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"password\"\n                        onChange={onChangePasswordInput}\n                    ></InputField>\n                    <InputField\n                        id=\"passwordConfirm\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        name=\"passwordConfirm\"\n                        autoComplete=\"passwordConfirm\"\n                        onChange={onChangePasswordConfirmInput}\n                    ></InputField>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={(e)=>callPasswordReset(e)}\n                    >\n                        Reset Password\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"/\" variant=\"body2\">\n                                Login\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n} \n\nexport default PasswordResetPage\n","import React from 'react'\nimport {Route,Redirect} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\n\nconst ProtectedRoute = ({component:Component,...rest}) => {\n    const authenticationData = useSelector((store)=>store.authenticationReducer)\n    return (\n        <Route\n            {...rest}\n            render={props=>{\n                if(authenticationData)\n                    return <Component {...props}></Component>\n                else\n                    return <Redirect to=\"/\"></Redirect>\n            }}\n        ></Route>\n    )\n}\n\nconst ProtectedAdminRoute = ({component:Component,...rest}) => {\n    const authenticationData = useSelector((store)=>store.authenticationReducer)\n    return (\n        <Route\n            {...rest}\n            render={props=>{\n                if(authenticationData && authenticationData.userData.type)\n                    return <Component {...props}></Component>\n                else\n                    return <Redirect to=\"/\"></Redirect>\n            }}\n        ></Route>\n    )\n}\n\nexport {\n    ProtectedRoute,\n    ProtectedAdminRoute\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {useSelector,useDispatch} from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {clearLoggedUser} from '../redux/actions/authentication'\nimport {clearOtpData} from '../redux/actions/otp'\n\nfunction NavigationBar() {\n    const authenticationData = useSelector((store)=>store.authenticationReducer)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const logout = () => {\n        dispatch(clearOtpData())\n        dispatch(clearLoggedUser())\n        return\n    }\n\n    const navigate = ({e,route}) => {\n        e.preventDefault()\n        history.push(`/${route}`)\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            backgroundColor:'#8884d8'\n        },\n        addNewButton:{\n            margin:20,\n            color:\"black\",\n            backgroundColor:'white',\n            fontWeight:'bold',\n        },\n        logoutButton:{\n            color:\"white\",\n            backgroundColor:'red',\n            fontWeight:'bold',\n        },\n    }))\n\n    const classes = useStyles()\n\n    return authenticationData? (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Grid container spacing={0}>\n                    <Grid item xs={12} sm={3} lg={2}>\n                        <Typography variant=\"h6\" onClick={(e)=>navigate({e:e,route:\"dashboard\"})}>\n                            Equipment Dashboard\n                        </Typography>\n                    </Grid>\n                    {authenticationData.userData.type?\n                        <Grid item xs={12} sm={3} lg={2}>\n                            <Button className={classes.addNewButton} onClick={(e)=>navigate({e:e,route:\"register\"})}>Add new user</Button>\n                        </Grid>\n                        :\n                        null\n                    }\n                </Grid>\n                <Button className={classes.logoutButton} onClick={()=>logout()}>Logout</Button>\n            </Toolbar>\n        </AppBar>\n    ) : null\n}\n\nexport default NavigationBar\n","import { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {useSelector,useDispatch} from 'react-redux'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport LoginPage from './pages/LoginPage'\nimport DashboardPage from './pages/Dashboard'\nimport SendOtpPage from './pages/SendOtpPage'\nimport RegisterPage from './pages/RegisterPage'\nimport VerifyOtpPage from './pages/VerifyOtpPage'\nimport PasswordResetPage from './pages/PasswordResetPage'\nimport {ProtectedRoute,ProtectedAdminRoute} from './components/ProtectedRoute'\nimport NavigationBar from './components/NavigationBar'\n\nimport {hideAlert} from './redux/actions/snackBar'\n\nfunction App() {\n  const dispatch = useDispatch()\n  const loadingStatus = useSelector(state=>state.loadingPanelReducer)\n  const snackBarData = useSelector(state=>state.snackBarReducer)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    dispatch(hideAlert())\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }))\n\n  const classes = useStyles()\n\n  const Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n  }\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={loadingStatus}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Snackbar open={snackBarData.status} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={3000} onClose={handleClose}>\n        <Alert severity={snackBarData.type}>{snackBarData.message}</Alert>\n      </Snackbar>\n      <Router>\n        <NavigationBar />\n        <Route exact path=\"/\" component={LoginPage}></Route>\n        <Route exact path=\"/sendOtpVerification\" component={SendOtpPage}></Route>\n        <Route exact path=\"/verifyOtp\" component={VerifyOtpPage}></Route>\n        <Route exact path=\"/resetPassword\" component={PasswordResetPage}></Route>\n        <ProtectedRoute exact path=\"/dashboard\" component={DashboardPage}></ProtectedRoute>\n        <ProtectedAdminRoute exact path=\"/register\" component={RegisterPage}></ProtectedAdminRoute>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store'\n \nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root') \n)\n"],"sourceRoot":""}